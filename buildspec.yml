version: 0.2

env:
  secrets-manager:
    LOGIN: sonar_secret:sonartoken
    HOST: sonar_secret:HOST
    Organization: sonar_secret:Organization
    Project: sonar_secret:Project
    
phases:
  install:
    commands:
    - yum -y install maven
    - cp ./settings.xml /root/.m2/settings.xml
    - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
    - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
    - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
  pre_build:
    commands:
    - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain alex --domain-owner 769875773379 --query authorizationToken --output text`  
  build:
    commands:
    - mvn clean install
    - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
    - sleep 5
    - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project > result.json
    - cat result.json
    - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
  post_build:
    commands:
    - echo $CODEBUILD_PUBLIC_BUILD_URL
    - echo $CODEBUILD_INITIATOR
    - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
    - echo $CODEBUILD_SOURCE_REPO_URL
    - echo $CODEBUILD_SOURCE_VERSION
    - echo $CODEBUILD_WEBHOOK_BASE_REF
    - echo $CODEBUILD_WEBHOOK_EVENT
    - echo $CODEBUILD_WEBHOOK_HEAD_REF
    - echo $CODEBUILD_WEBHOOK_TRIGGER
    - if [ $CODEBUILD_BUILD_SUCCEEDING -eq 1 ]  && [ $CODEBUILD_SOURCE_VERSION == "main" ] ; then mvn -Dmaven.test.skip=true deploy ;fi  
    
artifacts:
  files:
  - target/*.jar
  - ./*.sh
  - appspec.yml
  discard-paths: yes
